using DAL;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace Clinic.pagesPatient
{
    /// <summary>
    /// Interaction logic for PatientTakeAppointment.xaml
    /// </summary>
    public partial class PatientTakeAppointment : Page
    {
        clinicEntities context = new clinicEntities();
        CollectionViewSource take_AppointmentViewSource;
        public PatientTakeAppointment()
        {
            InitializeComponent();
            take_AppointmentViewSource = ((CollectionViewSource)(this.FindResource("take_AppointmentViewSource")));
        }

        private void Page_Loaded(object sender, RoutedEventArgs e)
        {
            context.take_Appointment.Load();
            take_AppointmentViewSource.Source = context.take_Appointment.Local;
        }

        private void tbName_TextChanged(object sender, TextChangedEventArgs e)
        {

            if (tbName == null || string.IsNullOrWhiteSpace(tbName.Text))
            {
                take_AppointmentViewSource.View.Filter = null;
                return;
            }
            else
            {
                string txt = tbName.Text.ToString().ToLower();
                take_AppointmentViewSource.View.Filter = item =>
                {

                    take_Appointment m = item as take_Appointment;

                    if (m != null)
                    {
                        if (!string.IsNullOrWhiteSpace(m.Doctor) && m.Doctor.ToLower().Contains(txt))
                            return true;
                    }
                    return false;
                };
            }
        }
        private void dpFrom_SelectedDateChanged(object sender, SelectionChangedEventArgs e)
        {
            if (dpFrom.SelectedDate == null)
            {
                take_AppointmentViewSource.View.Filter = null;
                return;
            }
            else
            {
                take_AppointmentViewSource.View.Filter = item =>
                {

                    take_Appointment m = item as take_Appointment;

                    if (m != null)
                    {
                        if (m.Start > dpFrom.SelectedDate)
                            return true;
                    }
                    return false;
                };
            }
        }

        private void dpTo_SelectedDateChanged(object sender, SelectionChangedEventArgs e)
        {
            if (dpTo.SelectedDate == null)
            {
                take_AppointmentViewSource.View.Filter = null;
                return;
            }
            else
            {
                take_AppointmentViewSource.View.Filter = item =>
                {

                    take_Appointment m = item as take_Appointment;

                    if (m != null)
                    {
                        if (m.End < dpTo.SelectedDate)
                            return true;
                    }
                    return false;
                };
            }
        }

        
    }
}

<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Clinic.pagesPatient"
      xmlns:DAL="clr-namespace:DAL;assembly=DAL" x:Class="Clinic.pagesPatient.PatientTakeAppointment"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PatientTakeAppointment" Loaded="Page_Loaded">

    <Page.Resources>
        <CollectionViewSource x:Key="take_AppointmentViewSource" d:DesignSource="{d:DesignInstance {x:Type DAL:take_Appointment}, CreateList=True}"/>
    </Page.Resources>

    <Grid DataContext="{StaticResource take_AppointmentViewSource}">

        <ListView x:Name="take_AppointmentListView" SelectionMode="Single" Margin="115,123,285,127" ItemsSource="{Binding}">
            <ListView.View>
                <GridView>
                    <GridViewColumn x:Name="doctorColumn" Width="80" Header="Doctor">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Margin="6,-1,-6,-1" Text="{Binding Doctor, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn x:Name="endColumn" Width="80" Header="End">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Margin="-6,-1" Text="{Binding End, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn x:Name="startColumn" Width="80" Header="Start">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Margin="-6,-1" Text="{Binding Start, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style>
                    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <Label Content="Doctor" HorizontalAlignment="Left" Margin="106,48,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name ="tbName" HorizontalAlignment="Left" Height="23" Margin="201,48,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="120" TextChanged="tbName_TextChanged"/>
        <Label  Content="From" HorizontalAlignment="Left" Margin="386,48,0,0" VerticalAlignment="Top"/>
        <DatePicker x:Name="dpFrom" HorizontalAlignment="Left" Margin="458,48,0,0" VerticalAlignment="Top" SelectedDateChanged="dpFrom_SelectedDateChanged"/>
        <Label Content="To" HorizontalAlignment="Left" Margin="593,48,0,0" VerticalAlignment="Top"/>
        <DatePicker x:Name="dpTo" HorizontalAlignment="Left" Margin="665,48,0,0" VerticalAlignment="Top" SelectedDateChanged="dpTo_SelectedDateChanged"/>
        <Button x:Name ="btTakeAppointment" Content="take Appointment for chosen spot" HorizontalAlignment="Left" Margin="593,149,0,0" VerticalAlignment="Top" Width="180"/>


    </Grid>
</Page>

